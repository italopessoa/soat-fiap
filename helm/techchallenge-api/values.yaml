# Default values for techchallenge-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
apiReplicaCount: 1
image:
  repository: ghcr.io/soat-fiap/fiap.techchallenge.bytemeburger/api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "bmb-api"
fullnameOverride: "byte-me-burger-api"

podAnnotations: {}
podLabels: {}

service:
  type: LoadBalancer
  port: 8080

ingress:
  enabled: false

resources:
  requests:
    cpu: 50m
  limits:
    cpu: 100m
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
apiLivenessProbe:
  httpGet:
    path: /healthz
    port: http

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

database:
  secretName: secret-db
  service: byte-me-burger-database

configmapName: configmap-api
